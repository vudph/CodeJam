4 rounds
- 3: coding rounds -> best DS, logic, ask to clarify questions before coding, talk and write, they want to know my thoughts, think aloud, prepare the test cases, input params (provided/not provided)

- 1: system design: parking lot, scalability to thousand cars

- what current tasks in current project, contribution, "I" -> important
- Leaderships -> answer to follow star (situation, task, action, result) pattern, learn from your failure, continuous learner

- 2 leadership example for each leadership


1) Describe one of your mistakes?
2) describe a situation when you had a conflict?
3) Describe your project architecture mentioned in the resume?
4) Did you ever take a business decision without manager consent and how it went?


System design
1) Handle ambiguity
- Go through: who, what, where, when, how, why
For example, suppose you were asked to describe the object-oriented design for a coffee maker. 
Your coffee maker might be an industrial machine designed to be used in a massive restaurant servicing hundreds of customers per hour and making ten different kinds of coffee products. Or it might be a very simple machine, designed to be used by the elderly for just simple black coffee. These use cases will significantly impact your design.

2) Define the core objects
For example, suppose we are asked to do the object-oriented design for a restaurant. Our core objects might be things like Table, Guest, Party, Order, Meal, Employee, Server, and Host.

3) Analyze relationships
For example, in the restaurant question, we may come up with the following design:
- Party should have an array of Guests.
- Server and Host inherit from Employee.
- Each Table belongs to one Party, but each Party may have multiple Tables.
- There is one Host for the Restaurant.

4) Investigate actions
